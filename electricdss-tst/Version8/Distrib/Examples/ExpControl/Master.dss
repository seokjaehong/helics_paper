// from 2019 IEEE PVSC conference paper, https://doi.org/10.1109/PVSC40753.2019.8981277
// after running these 5 cases, use "python plotadaptive.py" and "python plotadapq.py" to visualize results

// a
Clear
Set DefaultBaseFrequency=60

New Circuit.CloudUnity
compile SystemPCC.dss
edit pvsystem.pv1 daily=Cloud
compile SolveAndExportMonitors.dss

// g
Clear
New Circuit.ClearAdap
compile SystemPCC.dss
edit pvsystem.pv1 daily=Clear
New ExpControl.pv1 derlist=(pvsystem.pv1) deltaQ_factor=0.3 vreg=1.0 slope=22 vregtau=300 Tresponse=5 // EventLog=Yes
compile SolveAndExportMonitors.dss

Clear
New Circuit.CloudAdap
compile SystemPCC.dss
edit pvsystem.pv1 daily=Cloud
New ExpControl.pv1 derlist=(pvsystem.pv1) deltaQ_factor=0.3 vreg=1.0 slope=22 vregtau=300 Tresponse=5 // EventLog=Yes
compile SolveAndExportMonitors.dss

// h
Clear
New Circuit.ClearAdapQ
compile SystemPCC.dss
edit pvsystem.pv1 daily=Clear
New ExpControl.pv1 derlist=(pvsystem.pv1) deltaQ_factor=0.3 vreg=1.0 slope=22 vregtau=300 Tresponse=5 Qbias=-0.3 // EventLog=Yes
compile SolveAndExportMonitors.dss

Clear
New Circuit.CloudAdapQ
compile SystemPCC.dss
edit pvsystem.pv1 daily=Cloud
New ExpControl.pv1 derlist=(pvsystem.pv1) deltaQ_factor=0.3 vreg=1.0 slope=22 vregtau=300 Tresponse=5 Qbias=-0.3 // EventLog=Yes
compile SolveAndExportMonitors.dss

